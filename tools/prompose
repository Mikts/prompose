#!/bin/bash

# This script can be used to interact with prompose
function find_base_dir {
    local real_path=$(python -c "import os;print(os.path.realpath('$0'))")
    local dir_name="$(dirname "$real_path")"
    # TODO: Check in /usr/lib etc...
    BASEDIR="$(dirname ${dir_name})"
}

function usage {
    cat <<EOF
Usage: $0 COMMAND [option]

Options:
    --inventory, -i <inventory_path> Specify path to ansible inventory file
    --configdir, -c <config_path>    Specify path to directory with prompose.yml
    --verbose, -v                    Increase verbosity of ansible-playbook
    --help, -h                       Show this usage information
    --images                         Remove images when this option is defined and command is remove
    --volumes                        Remove volumes when this option is defined and command is remove

Commands:
    installdocker                    Install docker & docker-compose in target hosts
    precheck                         Do pre-deployment checks for hosts
    deploy                           Deploy and start all prompose containers
    stop                             Stop all prompose containers
    pull                             Pull all images for containers (only pull, no running containers)
    remove                           Stop and remove all prompose containes (With --images - remove images and --volumes - remove volumes)
    restart                          Restart all prompose containers
    scale                            # WIP
EOF
}

function process_cmd {
    echo "$ACTION : $CMD"
    $CMD
    if [[ $? -ne 0 ]]; then
        echo "Command failed $CMD"
        exit 1
    fi
}

SHORT_OPTS="hvi:c:"
LONG_OPTS="help,verbose,invetory:,configdir:,images,volumes"
ARGS=$(getopt -o "${SHORT_OPTS}" -l "${LONG_OPTS}" --name "$0" -- "$@") || { usage >&2; exit 2; }

eval set -- "$ARGS"

find_base_dir

INVENTORY="${BASEDIR}/ansible/inventory/all-in-one"
PLAYBOOK="${BASEDIR}/ansible/site.yml"
VERBOSITY=
EXTRA_OPTS=${EXTRA_OPTS}
CONFIG_DIR="/etc/prompose"
PLAYBOOK="${BASEDIR}/ansible/site.yml"
REMOVE_IMAGES="no"
REMOVE_VOLUMES="no"

while [ "$#" -gt 0 ]; do
    case "$1" in

    (--inventory|-i)
            INVENTORY="$2"
            shift 2
            ;;

    (--configdir|-c)
            CONFIG_DIR="$2"
            shift 2
            ;;

    (--verbose|-v)
            VERBOSITY="$VERBOSITY --verbose"
            shift
            ;;

    (--help|-h)
            usage
            shift
            exit 0
            ;;

    (--images)
            REMOVE_IMAGES="yes"
            shift
            ;;

    (--volumes)
            REMOVE_VOLUMES="yes"
            shift
            ;;
    (--)
            shift
            break
            ;;
    (*)
            echo 'error'
            exit 3
            ;;
esac
done

case "$1" in

(installdocker)
    ACTION="Install docker & docker-compose in target hosts"
    EXTRA_OPTS="${EXTRA_OPTS} -e prom_action=installdocker"
    ;;

(deploy)
    ACTION="Deploying prompose containers with docker-compose"
    EXTRA_OPTS="${EXTRA_OPTS} -e prom_action=deploy"
    ;;

(stop)
    ACTION="Stopping all prompose containers"
    EXTRA_OPTS="${EXTRA_OPTS} -e prom_action=stop"
    ;;

(pull)
    ACTION="Pull all images without running containers"
    EXTRA_OPTS="${EXTRA_OPTS} -e prom_action=pull"
    ;;

(remove)
    ACTION="Stop and remove all prompose containers"
    EXTRA_OPTS="${EXTRA_OPTS} -e prom_action=remove -e remove_images=${REMOVE_IMAGES} -e remove_volumes=${REMOVE_VOLUMES}"
    ;;

(scale)
    ACTION="Scale service in docker-compose"
    ;;

(restart)
    ACTION="Restart all prompose containers"
    ;;


(precheck)
    ACTION="Precheck port and docker installation in target hosts"
    EXTRA_OPTS="${EXTRA_OPTS} -e prom_action=precheck"
    ;;

(*)
    usage
    exit 0
    ;;
esac

CONFIG_OPTS="-e @${CONFIG_DIR}/prompose.yml"
CMD="ansible-playbook -i $INVENTORY $CONFIG_OPTS $EXTRA_OPTS $PLAYBOOK $VERBOSITY"
process_cmd
